name: release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/shared/setup

      - name: Build
        shell: bash
        run: make desktop -j

      - uses: ./.github/workflows/shared/versions
        id: versions

      - name: Create Build Info
        shell: bash
        run: |
          echo "Build Date: $(date)" > build_info.txt
          echo "Git Commit: $GITHUB_SHA" >> build_info.txt
          echo "App Version: ${{ steps.versions.outputs.app-version }}" >> build_info.txt

      - name: Set Artifact Names
        id: set_names
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            echo "app_artifact=desktop_client/app/release/${{ steps.versions.outputs.app-version }}/RPG-Book-Linux-${{ steps.versions.outputs.app-version }}.AppImage" >> $GITHUB_ENV
            echo "zip_name=rpg-book-linux.zip" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "app_artifact=desktop_client/app/release/${{ steps.versions.outputs.app-version }}/RPG-Book-Windows-${{ steps.versions.outputs.app-version }}-Setup.exe" >> $GITHUB_ENV
            echo "zip_name=rpg-book-windows.zip" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "app_artifact=desktop_client/app/release/${{ steps.versions.outputs.app-version }}/RPG-Book-Mac-${{ steps.versions.outputs.app-version }}-Installer.dmg" >> $GITHUB_ENV
            echo "zip_name=rpg-book-mac.zip" >> $GITHUB_ENV
          fi

      - name: Package Artifacts
        shell: bash
        run: |
          mkdir release
          mv ${{ env.app_artifact }} release/
          cp *.md release/
          rm release/GEMINI.md
          cp build_info.txt release/
          zip -r ${{ env.zip_name }} release

      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: rpg-book-${{ runner.os }}
          path: ${{ env.zip_name }}
